
px := @0,10
red := @0,10.red
green := @10,20.green

pos = 5,12
blue := @pos.blue
alpha := @pos.alpha

for y in 0..H {
    for x in 0..W {
        v := @x,y.red
    }
}

k := kernel(1 2 1
            2 5 2
            1 2 1)
k = kernel(0 1 0
           1 1 1
           0 1 0)
k = kernel(0 1 2 1 0
           1 2 3 2 1
           2 3 5 3 2
           1 2 3 2 1
           0 1 2 1 0)

for pos in rect(0,0 W,H) {
    orig := @pos
    if orig.intensity > 0.5 {
        px := convolute(k pos)
        @pos = color(px.intensity px.intensity px.intensity)
    } else {
        @pos = color(orig.red orig.green orig.blue orig.intensity)
    }
}

pixels := for pos in rect(0,0 W,H) {
            yield @pos
          } for c {
            if c.red > 127 { yield c.red }
          } for r {
            yield r
          }

draw from 0,0 closed {
    line 10,10
    line 20,40
    line 30,10
}

// ==============================================

gauss := kernel(0 1 2 1 0
                1 2 4 2 1
                2 4 8 4 2
                1 2 4 2 1
                0 1 2 1 0)

k := kernel(-1 -1 -1
           -1  8 -1
           -1 -1 -1)

sobel1 := kernel( 1  2  1
                  0  0  0
                 -1 -2 -1)
sobel2 := kernel(1  0 -1
                 2  0 -2
                 1  0 -1)

for pos in IMAGE {
	@pos = convolute(gauss pos)
}

blt IMAGE

for pos in IMAGE {
	px := @pos
	n1 := convolute(sobel1 pos)
	n2 := convolute(sobel2 pos)
	@pos = sqrt((n1 * n1 + n2 * n2))
}

blt IMAGE

for pos in IMAGE {
	px := @pos
	@pos = px.i > 50 ? WHITE : BLACK
}

