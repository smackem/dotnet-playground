gauss := kernel(0 1 2 1 0
                1 2 4 2 1
                2 4 8 4 2
                1 2 4 2 1
                0 1 2 1 0)

k := kernel(-1 -1 -1
           -1  8 -1
           -1 -1 -1)

sobel1 := kernel( 1  2  1
                  0  0  0
                 -1 -2 -1)
sobel2 := kernel(1  0 -1
                 2  0 -2
                 1  0 -1)

for pos in IMAGE {
	@pos = convolute(gauss pos)
}

blt IMAGE

for pos in IMAGE {
	px := @pos
	n1 := convolute(sobel1 pos)
	n2 := convolute(sobel2 pos)
	@pos = sqrt((n1 * n1 + n2 * n2))
}

blt IMAGE

for pos in IMAGE {
	px := @pos
	@pos = px.i > 50 ? WHITE : BLACK
}

// ========================================

k1 := [1 2 1
       2 4 2
       1 2 1]

k2 := [1 2 3
       4 5 -6
       7 -8 -9]

log(rgb(50,50,50) - rgb(20,20,20))

for xy in IMAGE { @xy = convolute(xy, k1) }
blt IMAGE
for xy in IMAGE { @xy = convolute(xy, k2) }
blt IMAGE
for pos in IMAGE { @pos = rgb(@pos.i, @pos.i, @pos.i) }

// ========================================

gauss := [0 1 2 1 0
          1 2 4 2 1
          2 4 8 4 2
          1 2 4 2 1
          0 1 2 1 0]

highpass := [-1 -1 -1 -1 -1
             -1 -1 -1 -1 -1
             -1 -1 25 -1 -1
             -1 -1 -1 -1 -1
             -1 -1 -1 -1 -1]

for pos in IMAGE {
    @pos = convolute(pos, gauss)
}

blt IMAGE

for pos in IMAGE {
    @pos = convolute(pos, highpass)
}
